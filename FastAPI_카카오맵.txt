FastAPI에서 **카카오맵이 들어간 HTML 페이지를 생성**하고, 이를 `/map` 경로에서 **웹뷰로 불러올 수 있도록** 처리하는 예제를 아래에 제공합니다.

---

## ✅ FastAPI에서 Kakao 지도 HTML 생성 예시

### 1. 프로젝트 구조 예시

```
your_project/
│
├── main.py
├── templates/
│   └── map.html
```

---

### 2. `map.html` 템플릿 (Kakao 지도 포함)

**`templates/map.html`**

```html
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>뚜따 지도</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://dapi.kakao.com/v2/maps/sdk.js?appkey=YOUR_APP_KEY&autoload=false"></script>
  </head>
  <body>
    <div id="map" style="width:100%;height:100vh;"></div>
    <script>
      kakao.maps.load(function () {
        const lat = {{ lat }};
        const lng = {{ lng }};
        const container = document.getElementById("map");
        const options = {
          center: new kakao.maps.LatLng(lat, lng),
          level: 3
        };
        const map = new kakao.maps.Map(container, options);
        new kakao.maps.Marker({ map: map, position: options.center });
      });
    </script>
  </body>
</html>
```

> 🔐 **`YOUR_APP_KEY`** 자리에 Kakao JavaScript용 App Key 넣기

---

### 3. `main.py` 코드 (FastAPI 서버)

**`main.py`**

```python
from fastapi import FastAPI, Request
from fastapi.responses import HTMLResponse
from fastapi.templating import Jinja2Templates

app = FastAPI()
templates = Jinja2Templates(directory="templates")

@app.get("/map", response_class=HTMLResponse)
async def show_map(request: Request, lat: float = 36.35, lng: float = 127.38):
    return templates.TemplateResponse("map.html", {
        "request": request,
        "lat": lat,
        "lng": lng
    })
```

---

## ✅ 호출 예시 (프론트 또는 브라우저에서)

```plaintext
https://your-domain.com/map?lat=36.35&lng=127.38
```

---

## ✅ Expo WebView에서 로드

```tsx
import { WebView } from 'react-native-webview';

<WebView
  source={{ uri: 'https://your-api.com/map?lat=36.35&lng=127.38' }}
  style={{ flex: 1 }}
/>
```

---

## 📌 추가 팁

* Kakao API는 HTTPS에서만 작동합니다 → `ngrok`, `Cloudflare Tunnel`, 또는 **배포용 서버** 필요
* 마커 여러 개 넣고 싶다면 `Jinja2`로 `marker_list` 넘겨서 for 루프 돌리면 됩니다
* WebView와 통신해야 한다면 `window.ReactNativeWebView.postMessage()` 사용 가능

—


